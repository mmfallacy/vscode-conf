export const LSP = [
  {
    key: "l",
    name: "LSP...",
    type: "bindings",
    bindings: [
      {
        key: ";",
        name: "Refactor",
        type: "command",
        command: "editor.action.refactor",
        when: "editorHasCodeActionsProvider && editorTextFocus && !editorReadonly",
      },
      {
        key: "a",
        name: "Auto Fix",
        type: "command",
        command: "editor.action.autoFix",
        when: "editorTextFocus && !editorReadonly && supportedCodeAction =~ /(\\s|^)quickfix\\b/",
      },
      {
        key: "d",
        name: "Definition",
        type: "command",
        command: "editor.action.revealDefinition",
        when: "editorHasDefinitionProvider && editorTextFocus && !isInEmbeddedEditor",
      },
      {
        key: "D",
        name: "Declaration",
        type: "command",
        command: "editor.action.revealDeclaration",
      },
      {
        key: "e",
        name: "Errors",
        type: "command",
        command: "workbench.actions.view.problems",
      },
      {
        key: "f",
        name: "Format",
        type: "command",
        command: "editor.action.formatDocument",
        when: "editorHasDocumentFormattingProvider && editorHasDocumentFormattingProvider && editorTextFocus && !editorReadonly && !inCompositeEditor",
      },
      {
        key: "i",
        name: "Implementation",
        type: "command",
        command: "editor.action.goToImplementation",
        when: "editorHasImplementationProvider && editorTextFocus && !isInEmbeddedEditor",
      },
      {
        key: "l",
        name: "Code Lens",
        type: "command",
        command: "codelens.showLensesInCurrentLine",
      },
      {
        key: "n",
        name: "Next Problem",
        type: "command",
        command: "editor.action.marker.next",
        when: "editorFocus",
      },
      {
        key: "N",
        name: "Next Problem (Proj)",
        type: "command",
        command: "editor.action.marker.nextInFiles",
        when: "editorFocus",
      },
      {
        key: "o",
        name: "Outline",
        type: "command",
        command: "outline.focus",
      },
      {
        key: "p",
        name: "Prev Problem",
        type: "command",
        command: "editor.action.marker.prevInFiles",
        when: "editorFocus",
      },
      {
        key: "P",
        name: "Prev Problem (Proj)",
        type: "command",
        command: "editor.action.marker.prev",
        when: "editorFocus",
      },
      {
        key: "q",
        name: "Quick Fix",
        type: "command",
        command: "editor.action.quickFix",
        when: "editorHasCodeActionsProvider && editorTextFocus && !editorReadonly",
      },
      {
        key: "r",
        name: "References",
        type: "command",
        command: "editor.action.goToReferences",
        when: "editorHasReferenceProvider && editorTextFocus && !inReferenceSearchEditor && !isInEmbeddedEditor",
      },
      {
        key: "R",
        name: "Rename",
        type: "command",
        command: "editor.action.rename",
        when: "editorHasRenameProvider && editorTextFocus && !editorReadonly",
      },
      {
        key: "v",
        name: "View All References",
        type: "command",
        command: "references-view.find",
        when: "editorHasReferenceProvider",
      },
      {
        key: "s",
        name: "Go To Symbol",
        type: "command",
        command: "workbench.action.gotoSymbol",
      },
      {
        key: "S",
        name: "Show All Symbols",
        type: "command",
        command: "workbench.action.showAllSymbols",
      },
    ],
  },
];
